// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(cuid())
  name      String
  email     String       @unique
  password  String
  image     String?
  role      Role         @default(MANAGER)
  isActive  Boolean      @default(true)

  // Relations
  chatSessions ChatSession[]

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model ChatSession {
  id        String        @id @default(cuid())
  title     String
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  messages  ChatMessage[]

  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model ChatMessage {
  id          String       @id @default(cuid())
  chatSession ChatSession  @relation(fields: [chatSessionId], references: [id])
  chatSessionId String
  role        MessageRole  // USER or ASSISTANT
  content     String       // actual text
  metadata    Json?        // optional: for tables, charts, API response etc.

  createdAt   DateTime     @default(now())
}

enum Role {
  MANAGER
  ADMIN
  SUPERADMIN
}

enum MessageRole {
  USER
  ASSISTANT
  SYSTEM
}
